server.port=8060
#spring.cloud.gateway.routes[0].id=users-status-check
#spring.cloud.gateway.routes[0].uri=http://localhost:8081
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/users/status
#spring.cloud.gateway.routes[0].predicates[1]=Method=GET
#spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie}


spring.cloud.gateway.routes[1].id=get-albums
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/albums
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie


spring.cloud.gateway.routes[2].id=get-photos
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/photos
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie

## Eureka client configuration
eureka.client.service-url.defaultZone=http://localhost:8070/eureka
spring.application.name=api-gateway


## Allow api-gateway to discover services from Eureka Discovery server
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://resource-server
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/users/status
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie


# To provide the same CORS configuration to requests that are not handled by some gateway route predicate
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
