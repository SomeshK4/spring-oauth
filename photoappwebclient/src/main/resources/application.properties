server.port=8090

spring.security.oauth2.client.registration.mywebclient.client-id=photo-app-webclient
spring.security.oauth2.client.registration.mywebclient.client-secret=69hvrqUTQ6kTAH4KlXjh8JEBqJMcngTG
spring.security.oauth2.client.registration.mywebclient.scope[0]=openid
spring.security.oauth2.client.registration.mywebclient.scope[1]=profile
spring.security.oauth2.client.registration.mywebclient.scope[2]=roles
spring.security.oauth2.client.registration.mywebclient.redirect-uri=http://localhost:8090/login/oauth2/code/mywebclient
spring.security.oauth2.client.registration.mywebclient.authorization-grant-type=authorization_code


## Properties needed by web client to connect to Keycloak Authorization Server
spring.security.oauth2.client.provider.mywebclient.authorization-uri=http://localhost:8080/realms/appsdeveloperblog/protocol/openid-connect/auth
spring.security.oauth2.client.provider.mywebclient.token-uri=http://localhost:8080/realms/appsdeveloperblog/protocol/openid-connect/token
spring.security.oauth2.client.provider.mywebclient.jwk-set-uri=http://localhost:8080/realms/appsdeveloperblog/protocol/openid-connect/certs
spring.security.oauth2.client.provider.mywebclient.user-info-uri=http://localhost:8080/realms/appsdeveloperblog/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.mywebclient.user-name-attribute=preferred_username
